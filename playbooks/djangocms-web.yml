---
- name: Deploy djangocms web

  hosts: web

  vars:
    user: "{{ ansible_ssh_user }}"
    mysql_root_pass: "{{ admin_pass }}"
    proj_name: djangocms
    venv_home: "{{ ansible_env.HOME }}"
    venv_path: "{{ venv_home }}/{{ proj_name }}"
    proj_dirname: project
    proj_path: "{{ venv_path }}/{{ proj_dirname }}"
    reqs_path: requirements.txt
    manage: "{{ python }} {{ proj_path }}/manage.py"
    live_hostname: 192.168.33.11.xip.io
    domains:
      - 192.168.33.11.xip.io
      - www.192.168.33.11.xip.io
    repo_url: git@github.com:purbohadi/DjangoCms.git
    gunicorn_port: 8000
    locale: en_US.UTF-8
    conf_path: /etc/nginx/conf
    tls_enabled: True
    python: "{{ venv_path }}/bin/python"
    database_name: djangocms
    database_user: djangocms
    database_host: localhost
    database_port: 3306
    gunicorn_proc_name: djangocms

  vars_files:
    - secrets.yml

  tasks:
    - name: install apt packages
      apt: pkg={{ item }} update_cache=yes cache_valid_time=3600
      sudo: True
      with_items:
        - git
        - memcached
        - nginx
        - libmysqlclient-dev
        - mysql-server
        - mysql-client
        - python-mysqldb
        - python-dev
        - python-pip
        - python-psycopg2
        - python-setuptools
        - python-virtualenv
        - supervisor
        - libpq-dev

    - name: start mysql service
      sudo: yes
      service:
        name: mysql
        state: started
        enabled: true

    - name: update mysql root password
      sudo: yes
      mysql_user:
        name: root
        host: "{{ item }}"
        password: "{{ mysql_root_pass }}"
        login_user: root
        login_password: "{{ mysql_root_pass }}"
        check_implicit_admin: yes
        priv: "*.*:ALL,GRANT"
      with_items:
        - venv_home
        - 127.0.0.1
        - ::1
        - localhost
    
    - name: create db user
      sudo: yes
      mysql_user:
        name: "{{ database_user }}"
        password: "{{ admin_pass }}"
        login_user: root
        login_password: "{{ mysql_root_pass }}"
        priv: "*.*:ALL,GRANT"

    - name: create db
      sudo: yes
      mysql_db:
        name: "{{ database_name }}"
        login_user: "{{ database_user }}"
        login_password: "{{ admin_pass }}"
        encoding: UTF8

    - name: check out the repository on the host
      git: repo={{ repo_url }} dest={{ proj_path }} accept_hostkey=yes force=yes

    - name: install required python packages
      pip: name={{ item }} virtualenv={{ venv_path }}
      with_items:
        - mysql-python
        - gunicorn
        - setproctitle
        - python-memcached
        - south

    - name: install requirements.txt
      pip: requirements={{ proj_path }}/{{ reqs_path }} virtualenv={{ venv_path }}

    - name: generate the settings file
      template: src=templates/local_settings.py.j2 dest={{ proj_path }}/local_settings.py

    - name: sync the database, apply migrations, collect static content
      django_manage:
        command: "{{ item }}"
        app_path: "{{ proj_path }}"
        virtualenv: "{{ venv_path }}"
        pythonpath: "{{ proj_path }}"
        settings: "local_settings"
      with_items:
        - syncdb
        - migrate
        - collectstatic

    - name: set the site id
      script: scripts/setsite.py
      environment:
        PATH: "{{ venv_path }}/bin"
        PROJECT_DIR: "{{ proj_path }}"
        WEBSITE_DOMAIN: "{{ live_hostname }}"

    - name: set the admin password
      script: scripts/setadmin.py
      environment:
        PATH: "{{ venv_path }}/bin"
        PROJECT_DIR: "{{ proj_path }}"
        ADMIN_PASSWORD: "{{ admin_pass }}"

    - name: set the gunicorn config file
      template: src=templates/gunicorn.conf.py.j2 dest={{ proj_path }}/gunicorn.conf.py

    - name: set the supervisor config file
      template: src=templates/supervisor.conf.j2 dest=/etc/supervisor/conf.d/djangocms.conf
      sudo: True
      notify: restart supervisor

    - name: set the nginx config file
      template: src=templates/nginx.conf.j2 dest=/etc/nginx/sites-available/djangocms.conf
      notify: restart nginx
      sudo: True

    - name: enable the nginx config file
      file:
        src: /etc/nginx/sites-available/djangocms.conf
        dest: /etc/nginx/sites-enabled/djangocms.conf
        state: link
      notify: restart nginx
      sudo: True

    - name: remove the default nginx config file
      file: path=/etc/nginx/sites-enabled/default state=absent
      notify: restart nginx
      sudo: True

    - name: ensure config path exists
      file: path={{ conf_path }} state=directory
      sudo: True
      when: tls_enabled

    - name: create ssl certificates
      command: >
        openssl req -new -x509 -nodes -out {{ proj_name }}.crt
        -keyout {{ proj_name }}.key -subj '/CN={{ domains[0] }}' -days 3650
        chdir={{ conf_path }}
        creates={{ conf_path }}/{{ proj_name }}.crt
      sudo: True
      when: tls_enabled
      notify: restart nginx

  handlers:
    - name: restart supervisor
      supervisorctl: name=gunicorn_djangocms state=restarted
      sudo: True

    - name: restart nginx
      service: name=nginx state=restarted
      sudo: True

